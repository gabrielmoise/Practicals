MODULE Main 0 0
IMPORT Lib 0
ENDHDR

PROC MAIN 0 0 0
!   a := 1;
CONST 1
STGW _a
!   b := 2;
CONST 2
STGW _b
!   c := 3; 
CONST 3
STGW _c
!   d := 4;
CONST 4
STGW _d
!   x := 10;
CONST 10
STGW _x
!   if (x >= 9) and (x <= 11) then
LDGW _x
CONST 9
JGEQ L5
JUMP L6
LABEL L5
LDGW _x
CONST 11
LEQ
JUMP L7
LABEL L6
CONST 0
LABEL L7
CONST 0
JNEQ L2
JUMP L3
LABEL L2
!     print a;
LDGW _a
CONST 0
GLOBAL lib.print
PCALL 1
CONST 0
GLOBAL lib.newline
PCALL 0
JUMP L4
LABEL L3
LABEL L4
!   if (x >= 19) and (x <= 111) then
LDGW _x
CONST 19
JGEQ L11
JUMP L12
LABEL L11
LDGW _x
CONST 111
LEQ
JUMP L13
LABEL L12
CONST 0
LABEL L13
CONST 0
JNEQ L8
JUMP L9
LABEL L8
!     print b;
LDGW _b
CONST 0
GLOBAL lib.print
PCALL 1
CONST 0
GLOBAL lib.newline
PCALL 0
JUMP L10
LABEL L9
LABEL L10
!   if (x >= 1) and (x <= 5) then
LDGW _x
CONST 1
JGEQ L17
JUMP L18
LABEL L17
LDGW _x
CONST 5
LEQ
JUMP L19
LABEL L18
CONST 0
LABEL L19
CONST 0
JNEQ L14
JUMP L15
LABEL L14
!     print c;
LDGW _c
CONST 0
GLOBAL lib.print
PCALL 1
CONST 0
GLOBAL lib.newline
PCALL 0
JUMP L16
LABEL L15
LABEL L16
!   if (x >= 100) and (x <= 111) then
LDGW _x
CONST 100
JGEQ L23
JUMP L24
LABEL L23
LDGW _x
CONST 111
LEQ
JUMP L25
LABEL L24
CONST 0
LABEL L25
CONST 0
JNEQ L20
JUMP L21
LABEL L20
!     print d;
LDGW _d
CONST 0
GLOBAL lib.print
PCALL 1
CONST 0
GLOBAL lib.newline
PCALL 0
JUMP L22
LABEL L21
LABEL L22
LABEL L1
RETURN
END

GLOVAR _x 4
GLOVAR _b 4
GLOVAR _c 4
GLOVAR _d 4
GLOVAR _a 4
